name: CamJam CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    name: Backend & Simulator Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev,sim]

      - name: Lint with Ruff
        run: ruff check .

      - name: Format check with Black
        id: black_check
        run: black --check .
        continue-on-error: true

      - name: Report formatting issues
        if: steps.black_check.outcome == 'failure'
        run: |
          echo "::warning::Black formatting issues detected. The auto-format workflow will attempt to resolve them."

      - name: Type-check with mypy
        run: mypy

      - name: Run CamJam unit tests
        run: pytest -m camjam_unit --cov=src --cov-report=term-missing

      - name: Run CamJam mocked hardware tests
        run: pytest -m camjam_mocked_hw --cov=src --cov-report=term-missing --cov-append

      - name: Run CamJam simulator tests
        run: pytest -m camjam_simulation --cov=src --cov-report=term-missing --cov-append

      - name: Build combined coverage report
        run: |
          coverage report --fail-under=85
          coverage xml -o .coverage-reports/coverage.xml
          coverage html -d .coverage-reports/html

      - name: Upload Python coverage
        uses: actions/upload-artifact@v4
        with:
          name: python-coverage
          path: .coverage-reports/

  frontend:
    name: Frontend Lint & Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: frontend
        run: npm install

      - name: Lint frontend
        working-directory: frontend
        run: npm run lint

      - name: Check formatting
        working-directory: frontend
        run: npm run format

      - name: Run Vitest suite with coverage
        working-directory: frontend
        run: npm run test:coverage -- --run

      - name: Upload frontend coverage
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage
